name: Build Desktop Client

on:
  push:
    paths:
      - 'client/**'
      - '.github/workflows/build-client.yml'
  pull_request:
    paths:
      - 'client/**'
      - '.github/workflows/build-client.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Build renderer and main processes
        working-directory: client
        run: npm run build

      - name: Package application
        working-directory: client
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npx electron-builder --win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npx electron-builder --mac
          else
            npx electron-builder --linux
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: voxel-client-${{ matrix.os }}
          path: client/release/**
          if-no-files-found: error

  release:
    name: Publish client release assets
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version
        id: version
        run: |
          VERSION=$(cat version.txt)
          VERSION=$(echo "$VERSION" | tr -d '\n' | tr -d '\r')
          if [ -z "$VERSION" ]; then
            echo "version.txt is empty" >&2
            exit 1
          fi
          echo "value=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Download client artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: voxel-client-*
          path: release-assets

      - name: Collect asset list
        id: assets
        run: |
          if [ ! -d release-assets ]; then
            echo "No artifacts downloaded" >&2
            exit 1
          fi
          {
            echo 'files<<EOF'
            find release-assets -type f
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.value }}
          name: ${{ steps.version.outputs.value }}
          files: ${{ steps.assets.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
